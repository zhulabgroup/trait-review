P = "gold"),
size = 9,
legend.size = 9,
mode = "fruchtermanreingold",
# mode = "spring",
label.size = 4,
label.alpha = 0.5,
layout.par = NULL,
layout.exp = 0.25,
size.legend = NA,
label.trim = FALSE,
edge.lty = "solid",
edge.label = NULL,
edge.size = edge_size,
edge.alpha = edge_alpha,
node.alpha = 0.5
) +
theme(legend.position = "none")
}
if (save) {
if (!is.null(filename)) {
ggsave(str_c("inst/figures/", filename, ".png"), p)
}
}
return(p)
}
plot_text_network(ls_df_net$trait_gc, min_count = 800, save = T, filename = "trait_gc")
plot_text_network(ls_df_net$trait_gc, min_count = 800, save = T, filename = "trait_gc")
plot_text_network(ls_df_net$area_trait, min_count = 50, save = T, filename = "area_trait")
col_pal
col_pal <- c(RColorBrewer::brewer.pal(df_net %>% pull(big_group) %>% unique() %>% length(), "Set2"), "light gray")
names(col_pal) = c(df_net %>% pull(big_group) %>% unique(), NA)
col_pal
# plot_text_network(ls_df_para$area_trait)
# plot_text_network(ls_df_para$trait_all %>% filter(count >=100))
# plot_text_network(ls_df_para$trait_gc)
plot_text_network <- function(df_net, min_count = 0, save = F, filename = NULL) {
bip <- df_net %>%
select(group, phrase, count) %>%
filter(count >= min_count) %>%
# mutate(count  = if_else(count <=0, 0, count)) %>%
spread(key = "phrase", value = "count", fill = 0) %>%
column_to_rownames("group") %>%
as.matrix()
network <- ggbipart::bip_init_network(bip)
edge_size <- ggbipart::bip_edgewt(bip, x = 2)
edge_alpha <- edge_size / 10
# edge_alpha[edge_alpha < quantile(edge_alpha, 0.75)] <- 0
if ("big_group" %in% colnames(df_net)) {
df_node <- data.frame(group = network %>% network.vertex.names()) %>%
left_join(df_net %>% distinct(group, big_group), by = "group")
network %v% "color" <- df_node$big_group
col_pal <- c(RColorBrewer::brewer.pal(df_net %>% pull(big_group) %>% unique() %>% length(), "Set2"), "#D3D3D3")
names(col_pal) = c(df_net %>% pull(big_group) %>% unique(), NA)
set.seed(12)
p <- GGally::ggnet2(
net = network,
shape = "mode",
label = T,
color = "color",
palette = col_pal,
size = 9,
legend.size = 9,
mode = "fruchtermanreingold",
# mode = "spring",
label.size = 4,
label.alpha = 0.5,
layout.par = NULL,
layout.exp = 0.25,
size.legend = NA,
label.trim = FALSE,
edge.lty = "solid",
edge.label = NULL,
edge.size = edge_size,
edge.alpha = edge_alpha,
node.alpha = 0.5
) +
theme(legend.position = "none")
} else {
set.seed(12)
p <- GGally::ggnet2(
net = network,
shape = "mode",
label = T,
color = "mode",
palette = c(A = "light gray",
P = "gold"),
size = 9,
legend.size = 9,
mode = "fruchtermanreingold",
# mode = "spring",
label.size = 4,
label.alpha = 0.5,
layout.par = NULL,
layout.exp = 0.25,
size.legend = NA,
label.trim = FALSE,
edge.lty = "solid",
edge.label = NULL,
edge.size = edge_size,
edge.alpha = edge_alpha,
node.alpha = 0.5
) +
theme(legend.position = "none")
}
if (save) {
if (!is.null(filename)) {
ggsave(str_c("inst/figures/", filename, ".png"), p)
}
}
return(p)
}
plot_text_network(ls_df_net$area_trait, min_count = 50, save = T, filename = "area_trait")
plot_text_network(ls_df_net$area_trait, min_count = 100, save = T, filename = "area_trait")
plot_text_network(ls_df_net$area_trait, min_count = 50, save = T, filename = "area_trait")
df_node <- data.frame(group = network %>% network.vertex.names()) %>%
left_join(df_net %>% distinct(group, big_group), by = "group")
network %v% "color" <- df_node$big_group
col_pal <- c(RColorBrewer::brewer.pal(df_net %>% pull(big_group) %>% unique() %>% length(), "Set2"), "#D3D3D3")
names(col_pal) = c(df_net %>% pull(big_group) %>% unique(), NA)
set.seed(12)
p <- GGally::ggnet2(
net = network,
shape = "mode",
label = T,
color = "color",
palette = col_pal,
size = 9,
legend.size = 9,
mode = "fruchtermanreingold",
# mode = "spring",
label.size = 4,
label.alpha = 0.5,
layout.par = NULL,
layout.exp = 0.25,
size.legend = NA,
label.trim = FALSE,
edge.lty = "solid",
edge.label = NULL,
edge.size = edge_size,
edge.alpha = edge_alpha,
node.alpha = 0.5
) +
theme(legend.position = "none")
p
# plot_text_network(ls_df_para$area_trait)
# plot_text_network(ls_df_para$trait_all %>% filter(count >=100))
# plot_text_network(ls_df_para$trait_gc)
plot_text_network <- function(df_net, min_count = 0, save = F, filename = NULL) {
bip <- df_net %>%
select(group, phrase, count) %>%
filter(count >= min_count) %>%
# mutate(count  = if_else(count <=0, 0, count)) %>%
spread(key = "phrase", value = "count", fill = 0) %>%
column_to_rownames("group") %>%
as.matrix()
network <- ggbipart::bip_init_network(bip)
edge_size <- ggbipart::bip_edgewt(bip, x = 2)
edge_alpha <- edge_size / 10
# edge_alpha[edge_alpha < quantile(edge_alpha, 0.75)] <- 0
if ("big_group" %in% colnames(df_net)) {
df_node <- data.frame(group = network %>% network.vertex.names()) %>%
left_join(df_net %>% distinct(group, big_group), by = "group")
network %v% "color" <- df_node$big_group
col_pal <- c(RColorBrewer::brewer.pal(df_net %>% pull(big_group) %>% unique() %>% length(), "Set2"), "light gray")
names(col_pal) = c(df_net %>% pull(big_group) %>% unique(), NA)
set.seed(12)
p <- GGally::ggnet2(
net = network,
shape = "mode",
label = T,
color = "color",
palette = col_pal,
size = 9,
legend.size = 9,
mode = "fruchtermanreingold",
# mode = "spring",
label.size = 4,
label.alpha = 0.5,
layout.par = NULL,
layout.exp = 0.25,
size.legend = NA,
label.trim = FALSE,
edge.lty = "solid",
edge.label = NULL,
edge.size = edge_size,
edge.alpha = edge_alpha,
node.alpha = 0.5
) +
theme(legend.position = "none")
} else {
set.seed(12)
p <- GGally::ggnet2(
net = network,
shape = "mode",
label = T,
color = "mode",
palette = c(A = "light gray",
P = "gold"),
size = 9,
legend.size = 9,
mode = "fruchtermanreingold",
# mode = "spring",
label.size = 4,
label.alpha = 0.5,
layout.par = NULL,
layout.exp = 0.25,
size.legend = NA,
label.trim = FALSE,
edge.lty = "solid",
edge.label = NULL,
edge.size = edge_size,
edge.alpha = edge_alpha,
node.alpha = 0.5
) +
theme(legend.position = "none")
}
if (save) {
if (!is.null(filename)) {
ggsave(str_c("inst/figures/", filename, ".png"), p)
}
}
return(p)
}
plot_text_network(ls_df_net$area_trait, min_count = 50, save = T, filename = "area_trait")
plot_text_network(ls_df_net$trait_gc, min_count = 800, save = T, filename = "trait_gc")
plot_text_network <- function(df_net, min_count = 0, save = F, filename = NULL) {
bip <- df_net %>%
select(group, phrase, count) %>%
filter(count >= min_count) %>%
# mutate(count  = if_else(count <=0, 0, count)) %>%
spread(key = "phrase", value = "count", fill = 0) %>%
column_to_rownames("group") %>%
as.matrix()
network <- ggbipart::bip_init_network(bip)
edge_size <- ggbipart::bip_edgewt(bip, x = 2)
edge_alpha <- edge_size / 10
# edge_alpha[edge_alpha < quantile(edge_alpha, 0.75)] <- 0
if ("big_group" %in% colnames(df_net)) {
df_node <- data.frame(group = network %>% network.vertex.names()) %>%
left_join(df_net %>% distinct(group, big_group), by = "group")
network %v% "color" <- df_node$big_group
col_pal <- c(RColorBrewer::brewer.pal(df_net %>% pull(big_group) %>% unique() %>% length(), "Set2"), "light gray")
names(col_pal) = c(df_net %>% pull(big_group) %>% unique(), NA)
set.seed(12)
p <- GGally::ggnet2(
net = network,
shape = "mode",
label = T,
color = "color",
palette = col_pal,
size = 9,
legend.size = 9,
mode = "fruchtermanreingold",
# mode = "spring",
label.size = 4,
label.alpha = 0.5,
layout.par = NULL,
layout.exp = 0.25,
size.legend = NA,
label.trim = FALSE,
edge.lty = "solid",
edge.label = NULL,
edge.size = edge_size,
edge.alpha = edge_alpha,
node.alpha = 0.5
) +
theme(legend.position = "none")
} else {
set.seed(12)
p <- GGally::ggnet2(
net = network,
shape = "mode",
label = T,
color = "mode",
palette = c(A = "light gray",
P = "gold"),
size = 9,
legend.size = 9,
mode = "fruchtermanreingold",
# mode = "spring",
label.size = 4,
label.alpha = 0.5,
layout.par = NULL,
layout.exp = 0.25,
size.legend = NA,
label.trim = FALSE,
edge.lty = "solid",
edge.label = NULL,
edge.size = edge_size,
edge.alpha = edge_alpha,
node.alpha = 0.5
) +
theme(legend.position = "none")
}
if (save) {
if (!is.null(filename)) {
ggsave(str_c("inst/figures/", filename, ".png"), p)
}
}
return(p)
}
df_node
df_node <- data.frame(group = network %>% network.vertex.names()) %>%
left_join(df_net %>% distinct(group, big_group), by = "group") %>%
mutate(replace_na(big_group, "phrase"))
df_node
df_node <- data.frame(group = network %>% network.vertex.names()) %>%
left_join(df_net %>% distinct(group, big_group), by = "group") %>%
mutate(big_group = replace_na(big_group, "phrase"))
df_node
network %v% "color" <- df_node$big_group
col_pal <- c(RColorBrewer::brewer.pal(df_net %>% pull(big_group) %>% unique() %>% length(), "Set2"), "light gray")
col_pal
names(col_pal) = c(df_net %>% pull(big_group) %>% unique(), "phrase")
col_pal
set.seed(12)
p <- GGally::ggnet2(
net = network,
shape = "mode",
label = T,
color = "color",
palette = col_pal,
size = 9,
legend.size = 9,
mode = "fruchtermanreingold",
# mode = "spring",
label.size = 4,
label.alpha = 0.5,
layout.par = NULL,
layout.exp = 0.25,
size.legend = NA,
label.trim = FALSE,
edge.lty = "solid",
edge.label = NULL,
edge.size = edge_size,
edge.alpha = edge_alpha,
node.alpha = 0.5
) +
theme(legend.position = "none")
p
# plot_text_network(ls_df_para$area_trait)
# plot_text_network(ls_df_para$trait_all %>% filter(count >=100))
# plot_text_network(ls_df_para$trait_gc)
plot_text_network <- function(df_net, min_count = 0, save = F, filename = NULL) {
bip <- df_net %>%
select(group, phrase, count) %>%
filter(count >= min_count) %>%
# mutate(count  = if_else(count <=0, 0, count)) %>%
spread(key = "phrase", value = "count", fill = 0) %>%
column_to_rownames("group") %>%
as.matrix()
network <- ggbipart::bip_init_network(bip)
edge_size <- ggbipart::bip_edgewt(bip, x = 2)
edge_alpha <- edge_size / 10
# edge_alpha[edge_alpha < quantile(edge_alpha, 0.75)] <- 0
if ("big_group" %in% colnames(df_net)) {
df_node <- data.frame(group = network %>% network.vertex.names()) %>%
left_join(df_net %>% distinct(group, big_group), by = "group") %>%
mutate(big_group = replace_na(big_group, "phrase"))
network %v% "color" <- df_node$big_group
col_pal <- c(RColorBrewer::brewer.pal(df_net %>% pull(big_group) %>% unique() %>% length(), "Set2"), "light gray")
names(col_pal) = c(df_net %>% pull(big_group) %>% unique(), "phrase")
set.seed(12)
p <- GGally::ggnet2(
net = network,
shape = "mode",
label = T,
color = "color",
palette = col_pal,
size = 9,
legend.size = 9,
mode = "fruchtermanreingold",
# mode = "spring",
label.size = 4,
label.alpha = 0.5,
layout.par = NULL,
layout.exp = 0.25,
size.legend = NA,
label.trim = FALSE,
edge.lty = "solid",
edge.label = NULL,
edge.size = edge_size,
edge.alpha = edge_alpha,
node.alpha = 0.5
) +
theme(legend.position = "none")
} else {
set.seed(12)
p <- GGally::ggnet2(
net = network,
shape = "mode",
label = T,
color = "mode",
palette = c(A = "light gray",
P = "gold"),
size = 9,
legend.size = 9,
mode = "fruchtermanreingold",
# mode = "spring",
label.size = 4,
label.alpha = 0.5,
layout.par = NULL,
layout.exp = 0.25,
size.legend = NA,
label.trim = FALSE,
edge.lty = "solid",
edge.label = NULL,
edge.size = edge_size,
edge.alpha = edge_alpha,
node.alpha = 0.5
) +
theme(legend.position = "none")
}
if (save) {
if (!is.null(filename)) {
ggsave(str_c("inst/figures/", filename, ".png"), p)
}
}
return(p)
}
plot_text_network(ls_df_net$area_trait, min_count = 50, save = T, filename = "area_trait")
plot_text_network(ls_df_net$area_trait, min_count = 200, save = T, filename = "area_trait")
plot_text_network(ls_df_net$area_trait, min_count = 50, save = T, filename = "area_trait")
plot_text_network(ls_df_net$trait_gc, min_count = 800, save = T, filename = "trait_gc")
?ggsave
# plot_text_network(ls_df_para$area_trait)
# plot_text_network(ls_df_para$trait_all %>% filter(count >=100))
# plot_text_network(ls_df_para$trait_gc)
plot_text_network <- function(df_net, min_count = 0, save = F, filename = NULL) {
bip <- df_net %>%
select(group, phrase, count) %>%
filter(count >= min_count) %>%
# mutate(count  = if_else(count <=0, 0, count)) %>%
spread(key = "phrase", value = "count", fill = 0) %>%
column_to_rownames("group") %>%
as.matrix()
network <- ggbipart::bip_init_network(bip)
edge_size <- ggbipart::bip_edgewt(bip, x = 2)
edge_alpha <- edge_size / 10
# edge_alpha[edge_alpha < quantile(edge_alpha, 0.75)] <- 0
if ("big_group" %in% colnames(df_net)) {
df_node <- data.frame(group = network %>% network.vertex.names()) %>%
left_join(df_net %>% distinct(group, big_group), by = "group") %>%
mutate(big_group = replace_na(big_group, "phrase"))
network %v% "color" <- df_node$big_group
col_pal <- c(RColorBrewer::brewer.pal(df_net %>% pull(big_group) %>% unique() %>% length(), "Set2"), "light gray")
names(col_pal) = c(df_net %>% pull(big_group) %>% unique(), "phrase")
set.seed(12)
p <- GGally::ggnet2(
net = network,
shape = "mode",
label = T,
color = "color",
palette = col_pal,
size = 9,
legend.size = 9,
mode = "fruchtermanreingold",
# mode = "spring",
label.size = 4,
label.alpha = 0.5,
layout.par = NULL,
layout.exp = 0.25,
size.legend = NA,
label.trim = FALSE,
edge.lty = "solid",
edge.label = NULL,
edge.size = edge_size,
edge.alpha = edge_alpha,
node.alpha = 0.5
) +
theme(legend.position = "none")
} else {
set.seed(12)
p <- GGally::ggnet2(
net = network,
shape = "mode",
label = T,
color = "mode",
palette = c(A = "light gray",
P = "gold"),
size = 9,
legend.size = 9,
mode = "fruchtermanreingold",
# mode = "spring",
label.size = 4,
label.alpha = 0.5,
layout.par = NULL,
layout.exp = 0.25,
size.legend = NA,
label.trim = FALSE,
edge.lty = "solid",
edge.label = NULL,
edge.size = edge_size,
edge.alpha = edge_alpha,
node.alpha = 0.5
) +
theme(legend.position = "none")
}
if (save) {
if (!is.null(filename)) {
ggsave(str_c("inst/figures/", filename, ".png"), p,
width = 16,
height = 8
)
}
}
return(p)
}
plot_text_network(ls_df_net$area_trait, min_count = 50, save = T, filename = "area_trait")
# plot_text_network(ls_df_net$trait_all , min_count = 100, save = T)
plot_text_network(ls_df_net$trait_gc, min_count = 800, save = T, filename = "trait_gc")
